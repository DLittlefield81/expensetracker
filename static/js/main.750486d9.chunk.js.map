{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_expenses","App","expenses","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.750486d9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    // const [userInput, setUserInput] = useState({\r\n    //   enteredTitle: '',\r\n    //   enteredAmount: '',\r\n    //   enteredDate: '',\r\n    // });\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        // setUserInput({\r\n        //   ...userInput,\r\n        //   enteredTitle: event.target.value,\r\n        // });\r\n        // setUserInput((prevState) => {\r\n        //   return { ...prevState, enteredTitle: event.target.value };\r\n        // });\r\n    };\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        // setUserInput({\r\n        //   ...userInput,\r\n        //   enteredAmount: event.target.value,\r\n        // });\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        // setUserInput({\r\n        //   ...userInput,\r\n        //   enteredDate: event.target.value,\r\n        // });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input\r\n                        type='text'\r\n                        value={enteredTitle}\r\n                        onChange={titleChangeHandler}\r\n                    />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input\r\n                        type='number'\r\n                        min='0.01'\r\n                        step='0.01'\r\n                        value={enteredAmount}\r\n                        onChange={amountChangeHandler}\r\n                    />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input\r\n                        type='date'\r\n                        min='2019-01-01'\r\n                        max='2022-12-31'\r\n                        value={enteredDate}\r\n                        onChange={dateChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='new-expense__actions'>\r\n                <button type='button' onClick={props.onCancel}>Cancel</button>\r\n                <button type='submit'>Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing,setIsEditing] = useState(false);\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n    const startEditingHandler = () => { \r\n        setIsEditing(true);\r\n    }\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n            {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import React from 'react'\r\nimport './Card.css'\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={dropdownChangeHandler}>\r\n                    <option value='2022'>2022</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2019'>2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\n\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n            <div className='expense-date__day'>{day}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className='expense-item'>\r\n      <ExpenseDate date={props.date} />\r\n      <div className='expense-item__description'>\r\n        <h2>{props.title}</h2>\r\n        <div className='expense-item__price'>${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpensesList.css'\r\nimport React from 'react'\r\nimport ExpenseItem from './ExpenseItem';\r\nconst ExpensesList = props => {\r\n\r\n    if (props.items.length === 0) { \r\nreturn <h2 className='expenses-list__fallback'>No expenses found. </h2>\r\n    }\r\n    \r\n\r\n  return (\r\n      <ul className='expenses-list'>\r\n        {props.items.map((expense) => (\r\n            <ExpenseItem\r\n                key={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date}\r\n            />\r\n        ))};\r\n      </ul>\r\n  )\r\n}\r\n\r\nexport default ExpensesList","import React, { useState } from 'react';\r\n\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\nreturn (\r\n  <div>\r\n    <Card className='expenses'>\r\n      <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default Expenses;","import React,{useState} from 'react';\r\n\r\nimport NewExpense from './components/NewExpense/NewExpense';\r\nimport Expenses from './components/Expenses/Expenses';\r\nconst DUMMY_expenses = [\r\n    {\r\n      id: 'e1',\r\n      title: 'Toilet Paper',\r\n      amount: 94.12,\r\n      date: new Date(2020, 7, 14),\r\n    },\r\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\r\n    {\r\n      id: 'e3',\r\n      title: 'Car Insurance',\r\n      amount: 294.67,\r\n      date: new Date(2021, 2, 28),\r\n    },\r\n    {\r\n      id: 'e4',\r\n      title: 'New Desk (Wooden)',\r\n      amount: 450,\r\n      date: new Date(2021, 5, 12),\r\n    },\r\n  ];\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(DUMMY_expenses);\r\n\r\n  const addExpenseHandler = expense => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses]\r\n      \r\n    });\r\n  };\r\n\r\n  // return React.createElement(\r\n  //   'div',\r\n  //   {},\r\n  //   React.createElement('h2', {}, \"Let's get started!\"),\r\n  //   React.createElement(Expenses, { items: expenses })\r\n  // );\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}